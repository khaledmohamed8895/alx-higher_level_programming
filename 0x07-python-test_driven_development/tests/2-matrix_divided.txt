>>> matrix_divided = __import__('2-matrix_divided').matrix_divided
>>> matrix = [[1, 2, 3], [4, 5, 6]]
>>> matrix_divided(matrix, 3)  
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

>>> matrix = [[3]]
>>> matrix_divided(matrix, 3)  
[[1.0]]

>>> matrix = []
>>> matrix_divided(matrix, 3)  
[]

>>> matrix = [[6, 9], [18, 15]]
>>> matrix_divided(matrix, -3)  
[[-2.0, -3.0], [-6.0, -5.0]]

>>> matrix = [[1, 2, 3], [4, 5, 6], 111]
>>> matrix_divided(matrix, 3)  
Traceback (most recent call last):
...
    raise TypeError("matrix must be a matrix (list of lists) of integers/floats")    
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix = [['a', 2, 3], [4, 5, 6]]
>>> matrix_divided(matrix, 3)  
Traceback (most recent call last):
...
    raise TypeError("matrix must be a matrix (list of lists) of integers/floats")
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix = [{1, 2, 3}, [4, 5, 6]]
>>> matrix_divided(matrix, 3)  
Traceback (most recent call last):
...
    raise TypeError("matrix must be a matrix (list of lists) of integers/floats")
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix = [[1, 2, 3], ['a', 5, 6]]
>>> matrix_divided(matrix, 3)  
Traceback (most recent call last):
...
    raise TypeError("matrix must be a matrix (list of lists) of integers/floats")
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix = [[2, 3], [4, 5, 6]]
>>> matrix_divided(matrix, 3)  
Traceback (most recent call last):
...
    raise TypeError("Each row of the matrix must have the same size")
TypeError: Each row of the matrix must have the same size

>>> matrix = [[1, 2, 3], [5, 6]]
>>> matrix_divided(matrix, 3)  
Traceback (most recent call last):
...
    raise TypeError("Each row of the matrix must have the same size")
TypeError: Each row of the matrix must have the same size

>>> matrix = [[1, 2, 3], [4, 5, 6]]
>>> matrix_divided(matrix, 0)  
Traceback (most recent call last):
...
    raise ZeroDivisionError("division by zero")
ZeroDivisionError: division by zero

>>> matrix = [[1, 2, 3], [4, 5, 6]]
>>> matrix_divided(matrix, 'a')  
Traceback (most recent call last):
...
    raise TypeError("div must be a number")
TypeError: div must be a number


>>> matrix = [1, 2, 3]
>>> matrix_divided(matrix, 3)  
Traceback (most recent call last):
...
    raise TypeError("matrix must be a matrix (list of lists) of integers/floats")
TypeError: matrix must be a matrix (list of lists) of integers/floats


>>> matrix_divided(3)  
Traceback (most recent call last):
...
    print(matrix_divided(3))
TypeError: matrix_divided() missing 1 required positional argument: 'div'


>>> matrix_divided()  
Traceback (most recent call last):
...
    matrix_divided()
TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'
